{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","services/pixabayAPI.js","components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","App.jsx","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","getImages","searchQuery","page","axios","get","then","res","data","hits","catch","console","error","Searchbar","state","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","onSearch","props","className","s","SearchForm","onSubmit","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autocomplete","autofocus","placeholder","onChange","Component","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleOverlayClick","event","target","window","addEventListener","removeEventListener","src","alt","createPortal","Overlay","onClick","ImageGalleryItem","showModal","toggleModal","image","webformatURL","tags","ImageGalleryItemImage","largeImageURL","ImageGallery","images","map","id","Button","onHandleClick","scrollTo","top","documentElement","scrollHeight","behavior","Load","color","height","width","App","isLoading","status","query","fetchImages","a","prevState","Promise","reject","Error","loadMore","log","prevProps","length","message","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.71b83778.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2fbz1\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__1MaUS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__v0lw9\",\"Modal\":\"Modal_Modal__h2_O6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1wZZR\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__fzJ9V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1-Nug\"};","import axios from 'axios';\n\nconst API_KEY = '19212472-91085f93384c895bec44df301';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nconst getImages = ({ searchQuery = '', page = 1 }) => {\n  return axios\n    .get(\n      `${BASE_URL}?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(res => res.data.hits)\n    .catch(console.error());\n};\n\n/*axios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  key: API_KEY,\n  image_type: 'photo',\n  orientation: 'horizontal',\n  per_page: 12,\n};\nconst getImages = async ({ searchQuery, page = 1 }) => {\n  try {\n    const { data } = await axios.get('', {\n      params: {\n        searchQuery,\n        page,\n      },\n    });\n    console.log(data.hits);\n    return data.hits;\n  } catch (error) {\n    console.log('error : '(error));\n    return [];\n  }\n};*/\nexport default getImages;\n","import { Component } from 'react';\nimport s from './Searchbar.module.css';\nclass Searchbar extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  handleChange = e => {\n    this.setState({ searchQuery: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { searchQuery } = this.state;\n    const { onSearch } = this.props;\n\n    onSearch(searchQuery);\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            autocomplete=\"off\"\n            autofocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleChange}\n          />\n          <p>{this.props.searchQuery}</p>\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import s from './Modal.module.css';\nimport { createPortal } from 'react-dom';\nimport { Component } from 'react';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n    // console.log('componentDidMount');\n    // window.addEventListener('keydown', e => { console.log(e.code)});\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n    // console.log('componentWillUnmount');\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleOverlayClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n  render() {\n    const { src, alt } = this.props;\n\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleOverlayClick}>\n        <div className={s.Modal}>\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\nexport default Modal;\n","import { Component } from 'react';\nimport Modal from '../Modal/Modal';\nimport s from './ImageGalleryItem.module.css';\nimport PropTypes from 'prop-types';\n\nclass ImageGalleryItem extends Component {\n  state = {\n    showModal: false,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { image } = this.props;\n    const { showModal } = this.state;\n    return (\n      <li className={s.ImageGalleryItem}>\n        <img\n          onClick={this.toggleModal}\n          src={image.webformatURL}\n          alt={image.tags}\n          className={s.ImageGalleryItemImage}\n        />\n        {showModal && (\n          <Modal\n            onClose={this.toggleModal}\n            src={image.largeImageURL}\n            alt={image.tags}\n          />\n        )}\n      </li>\n    );\n  }\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.shape({\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    largeImageUrl: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ImageGalleryItem;\n","import s from './ImageGallery.module.css';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nfunction ImageGallery({ images }) {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(image => (\n        <ImageGalleryItem\n          key={image.id}\n          className={s.ImageGalleryItem}\n          image={image}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  key: PropTypes.number.isRequired,\n  image: PropTypes.object.isRequired,\n};\n\nexport default ImageGallery;\n","import s from './Button.module.css';\nexport default function Button({ onHandleClick }) {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: 'smooth',\n  });\n\n  return (\n    <button type=\"button\" className={s.Button} onClick={onHandleClick}>\n      Load More...\n    </button>\n  );\n}\n","import Loader from 'react-loader-spinner';\nimport { Component } from 'react';\n\nexport default class Load extends Component {\n  render() {\n    return <Loader type=\"Circles\" color=\"#3f51b5\" height={200} width={200} />;\n  }\n}\n","import { Component } from 'react';\nimport getImages from './services/pixabayAPI';\n\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageCallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Loader from './components/Loader/Loader';\n\nclass App extends Component {\n  state = {\n    searchQuery: null,\n    page: 1,\n    isLoading: false,\n    images: [],\n    error: false,\n    status: 'idle',\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.setState({ status: 'pending' });\n      this.fetchImages();\n    }\n    if (\n      this.state.images.length === 0 &&\n      prevState.images.length !== this.state.images\n    ) {\n      new Error(\n        `${this.state.searchQuery} not found, please enter a new search`,\n      );\n    }\n\n    if (prevState.page !== this.state.page) {\n      this.fetchImages();\n    }\n  }\n\n  onSearch = query => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      images: [],\n      error: false,\n      status: 'pending',\n    });\n  };\n\n  fetchImages = async () => {\n    const { searchQuery, page } = this.state;\n    this.setState({ isLoading: true });\n    try {\n      const data = await getImages({ searchQuery, page });\n      this.setState(prevState => ({\n        images: [...prevState.images, ...data],\n        status: 'resolved',\n      }));\n    } catch (error) {\n      this.setState({ status: 'rejected' });\n      return Promise.reject(new Error('Something wrong ... refresh search'));\n    }\n  };\n  loadMore = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n    console.log(this.toggleModal);\n  };\n\n  render() {\n    const { images, status, error, showModal } = this.state;\n\n    <Searchbar onSearch={this.onSearch} />;\n    if (status === 'idle') {\n      return <Searchbar onSearch={this.onSearch} />;\n    }\n    if (status === 'pending') {\n      return <Loader />;\n    }\n    if (status === 'rejected') {\n      <p>{error.message}</p>;\n    }\n    if (status === 'resolved') {\n      return (\n        <>\n          <Searchbar onSearch={this.onSearch} />\n          <ImageCallery images={images} onClose={showModal} />\n\n          <Button onHandleClick={this.loadMore} />\n        </>\n      );\n    }\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__GrPtC\",\"SearchForm\":\"Searchbar_SearchForm__1lo2y\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3kZhE\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3A9OG\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3JfNX\"};"],"sourceRoot":""}